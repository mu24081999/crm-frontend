{"version":3,"file":"static/js/2032.e8a2a7b0.chunk.js","mappings":"mMAIA,MAiDA,EAjDoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QACvCC,cAAeC,IAAWJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,UACzDC,GAASC,EAAAA,EAAAA,aACTC,GAAWC,EAAAA,EAAAA,eAmCjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAlCaC,UACnBC,EAAMC,uBACAjB,GACJM,EAAAA,EAAAA,IAAcJ,EAAO,CACnBgB,SAAU,MACVC,OAAQ,OAIZC,QAAQC,IACN,uDACM,OAANd,QAAM,IAANA,OAAM,EAANA,EAAQe,eAGV,MAAMC,QAAed,EAAOe,mBAAyB,OAANjB,QAAM,IAANA,OAAM,EAANA,EAAQe,cAAe,CACpEG,eAAgB,CACdC,KAAMf,EAASgB,WAAWC,EAAAA,gBAG9BR,QAAQC,IAAI,wCAA+BE,GAEvCA,EAAOM,MAETT,QAAQS,MAAMN,EAAOM,MAAMC,SAGS,cAAhCP,EAAOjB,cAAcyB,SACvBX,QAAQC,IAAI,uBACZD,QAAQC,IAAIE,GAEhB,EAI8BS,UAAU,MAAKC,SAAA,EAC3CC,EAAAA,EAAAA,KAACN,EAAAA,YAAW,KACZM,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAW3B,EAAOwB,SAAC,UAGpC,EC7CLI,GAAgBC,EAAAA,EAAAA,GAEpB,+GAGFlB,QAAQC,IAAI,gCAAuBgB,GACnC,MAMA,EANgBE,KACdL,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAAC/B,OAAQ4B,EAAcJ,UAC9BC,EAAAA,EAAAA,KAACnC,EAAW,K","sources":["views/Payment/PaymentForm.js","views/Payment/Payment.js"],"sourcesContent":["import React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { paymentIntent } from \"../../redux/services/payment\";\nconst PaymentForm = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state) => state.auth);\n  const { paymentIntent: intent } = useSelector((state) => state.payment);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await dispatch(\n      paymentIntent(token, {\n        currency: \"usd\",\n        amount: 5000,\n      })\n    );\n\n    console.log(\n      \"ðŸš€ ~ handleSubmit ~ intent?.client_secret:\",\n      intent?.client_secret\n    );\n    // Confirm the payment on the client side\n    const result = await stripe.confirmCardPayment(intent?.client_secret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n    console.log(\"ðŸš€ ~ handleSubmit ~ result:\", result);\n\n    if (result.error) {\n      // Handle error\n      console.error(result.error.message);\n    } else {\n      // Handle success\n      if (result.paymentIntent.status === \"succeeded\") {\n        console.log(\"Payment successful!\");\n        console.log(result);\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-5\">\n      <CardElement />\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};\nexport default PaymentForm;\n","// PaymentForm.js\nimport React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentForm from \"./PaymentForm\";\nconst stripePromise = loadStripe(\n  // \"pk_live_51Ofz4pJKrp7ymIs288jzCaySPlhiAYjB00SGaNzJE7Uo534yJQzIxSmqN0sm6o7u328iQdJG9oZZUXF7PLHdiH7p00a01WvIRZ\"\n  \"pk_test_51Ofz4pJKrp7ymIs26k0TGRkIE52sj88vLb6Bs0jVUdy0qp5gljvciDjPbOCxqMzTvCiQ7Hz3Q3feMxD2zdudVvsF00aU6KGlR9\"\n);\n\nconsole.log(\"ðŸš€ ~ stripePromise:\", stripePromise);\nconst Payment = () => (\n  <Elements stripe={stripePromise}>\n    <PaymentForm />\n  </Elements>\n);\n\nexport default Payment;\n"],"names":["PaymentForm","dispatch","useDispatch","token","useSelector","state","auth","paymentIntent","intent","payment","stripe","useStripe","elements","useElements","_jsxs","onSubmit","async","event","preventDefault","currency","amount","console","log","client_secret","result","confirmCardPayment","payment_method","card","getElement","CardElement","error","message","status","className","children","_jsx","type","disabled","stripePromise","loadStripe","Payment","Elements"],"sourceRoot":""}