{"version":3,"file":"static/js/2191.c1d17413.chunk.js","mappings":"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","sources":["views/Test/Notifications.js","views/Test/Options.js","views/Test/VideoPlayer.js","views/Test/Test2.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { Box, Button, Heading } from \"@chakra-ui/react\";\nimport { SocketContext } from \"../../Context\";\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <Box display=\"flex\" justifyContent=\"space-around\" mb=\"20\">\n          <Heading as=\"h3\"> {call.name} is calling </Heading>\n          <Button\n            variant=\"outline\"\n            onClick={answerCall}\n            border=\"1px\"\n            borderStyle=\"solid\"\n            borderColor=\"black\"\n          >\n            Answer Call\n          </Button>\n        </Box>\n      )}\n    </>\n  );\n};\nexport default Notifications;\n","import { useState, useContext } from \"react\";\nimport {\n  Button,\n  Input,\n  FormLabel,\n  Heading,\n  Grid,\n  Box,\n  Container,\n  FormControl,\n} from \"@chakra-ui/react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { BiClipboard, BiPhoneCall, BiPhoneOff } from \"react-icons/bi\";\nimport { SocketContext } from \"../../Context\";\n\nconst Options = () => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } =\n    useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState(\"\");\n\n  return (\n    <Container maxW=\"1200px\" m=\"35px 0\" p=\"0\">\n      <Box p=\"10px\" border=\"2px\" borderColor=\"black\" borderStyle=\"solid\">\n        <FormControl\n          display=\"flex\"\n          flexDirection=\"column\"\n          noValidate\n          aria-autocomplete=\"none\"\n        >\n          <Grid templateColumns=\"repeat(2, 1fr)\" mt=\"12\">\n            <Grid colSpan={1} p=\"6\">\n              <Heading as=\"h6\"> Account Info </Heading>\n              <FormLabel>Username</FormLabel>\n              <Input\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                width=\"100%\"\n              />\n              <CopyToClipboard text={me} mt=\"20\">\n                <Button\n                  leftIcon={<BiClipboard />}\n                  colorScheme=\"teal\"\n                  variant=\"solid\"\n                >\n                  Copy ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid colSpan={1} p=\"6\">\n              <Heading as=\"h6\"> Make a Call </Heading>\n              <FormLabel> User id to call </FormLabel>\n              <Input\n                type=\"text\"\n                value={idToCall}\n                onChange={(e) => setIdToCall(e.target.value)}\n                width=\"100%\"\n              />\n              {callAccepted && !callEnded ? (\n                <Button\n                  leftIcon={<BiPhoneOff />}\n                  onClick={leaveCall}\n                  mt=\"20\"\n                  colorScheme=\"teal\"\n                  variant=\"info\"\n                >\n                  Hang up\n                </Button>\n              ) : (\n                <Button\n                  leftIcon={<BiPhoneCall />}\n                  onClick={() => callUser(idToCall)}\n                  mt=\"20\"\n                  colorScheme=\"teal\"\n                  variant=\"solid\"\n                >\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </FormControl>\n      </Box>\n    </Container>\n  );\n};\nexport default Options;\n","import { Grid, Box, Heading } from \"@chakra-ui/react\";\nimport { SocketContext } from \"../../Context\";\nimport { useContext } from \"react\";\n\nconst VideoPlayer = () => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } =\n    useContext(SocketContext);\n\n  return (\n    <Grid justifyContent=\"center\" templateColumns=\"repeat(2, 1fr)\" mt=\"12\">\n      {/* my video */}\n      {stream && (\n        <Box>\n          <Grid colSpan={1}>\n            <Heading as=\"h5\">{name || \"Name\"}</Heading>\n            <video\n              playsInline\n              muted\n              ref={myVideo}\n              autoPlay\n              width=\"600\"\n              controls=\"true\"\n            />\n          </Grid>\n        </Box>\n      )}\n      {/* user's video */}\n      {callAccepted && !callEnded && (\n        <Box>\n          <Grid colSpan={1}>\n            <Heading as=\"h5\">{call.name || \"Name\"}</Heading>\n            <video\n              playsInline\n              ref={userVideo}\n              autoPlay\n              width=\"600\"\n              controls=\"true\"\n            />\n          </Grid>\n        </Box>\n      )}\n    </Grid>\n  );\n};\nexport default VideoPlayer;\n","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { ContextProvider } from \"../../Context\";\n\nimport { Box, Heading, Container } from \"@chakra-ui/react\";\nimport Notifications from \"./Notifications\";\nimport Options from \"./Options\";\nimport VideoPlayer from \"./VideoPlayer\";\n\nconst Test = () => {\n  return (\n    <ContextProvider>\n      <ChakraProvider>\n        <Box>\n          <Container maxW=\"1200px\" mt=\"8\">\n            <Heading as=\"h2\" size=\"2xl\">\n              {\" \"}\n              Video Chat App{\" \"}\n            </Heading>\n            <VideoPlayer />\n            <Options />\n            <Notifications />\n          </Container>\n        </Box>\n      </ChakraProvider>\n    </ContextProvider>\n  );\n};\n\nexport default Test;\n"],"names":["Notifications","answerCall","call","callAccepted","useContext","SocketContext","_jsx","_Fragment","children","isReceivingCall","_jsxs","Box","display","justifyContent","mb","Heading","as","name","Button","variant","onClick","border","borderStyle","borderColor","Options","me","setName","callEnded","leaveCall","callUser","idToCall","setIdToCall","useState","Container","maxW","m","p","FormControl","flexDirection","noValidate","Grid","templateColumns","mt","colSpan","FormLabel","Input","type","value","onChange","e","target","width","CopyToClipboard","text","leftIcon","BiClipboard","colorScheme","BiPhoneOff","BiPhoneCall","VideoPlayer","myVideo","userVideo","stream","playsInline","muted","ref","autoPlay","controls","Test","ContextProvider","ChakraProvider","size"],"sourceRoot":""}