{"version":3,"file":"static/js/7920.686f929c.chunk.js","mappings":"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","sources":["components/FormFields/reactColorInput.js","views/Profile/components/Sidebar.js","views/Profile/components/EditAccountSetting.js","views/Profile/components/AccountSetting.js","views/Profile/components/UpdatePassword.js","redux/services/card.js","views/Profile/components/CardInformation.js","views/Profile/components/EmailConfig.js","redux/services/billing.js","views/Profile/components/NumberConfig.js","views/Profile/components/VoiceSettings.js","views/Profile/components/BrandDetails.js","views/Profile/ProfileContent.js","views/Profile/Profile.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useController, Controller } from \"react-hook-form\";\nimport _ from \"lodash\";\nimport InputColor from \"react-input-color\";\n\nconst ReactColorInput = React.forwardRef((props, ref) => {\n  const {\n    title,\n    style,\n    label,\n    type,\n    errors,\n    defaultValue,\n    onChange,\n    onFocus,\n    onBlur,\n    menuPlacement,\n    ellipses,\n    value,\n    ...others\n  } = props;\n  const { field, fieldState, formState } = useController(props);\n  const [color, setColor] = useState({});\n  let err = _.get(errors, props.name);\n  const handleOnChange = (value) => {\n    // field.onChange(value);\n    setColor(value);\n    field.onChange(value.hex);\n  };\n  return (\n    <div className=\"mb-5\">\n      <Controller\n        name={props?.name}\n        rules={props?.rules}\n        control={props?.control}\n        defaultValue={defaultValue}\n        render={({ field: { onChange } }) => (\n          <>\n            {label && (\n              <label\n                for={props?.name}\n                class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n              >\n                {label}\n              </label>\n            )}\n            <div className=\"\">\n              <InputColor\n                initialValue={field?.value ? field?.value : \"\"}\n                onChange={handleOnChange}\n                placement=\"bottom\"\n                name={field.name}\n                className=\"position-absolute \"\n                style={{ height: \"38px\" }}\n              />\n              {/* <div\n                style={{\n                  width: 50,\n                  height: 50,\n                  marginTop: 20,\n                  backgroundColor: color.rgba,\n                }}\n              /> */}\n              <input\n                className=\"form-control\"\n                style={{ paddingLeft: \"70px\" }}\n                type=\"text\"\n                placeholder=\" Color\"\n                name={field.name}\n                value={color.hex}\n              />\n            </div>\n          </>\n        )}\n      />\n      {props.rules && err && props.rules && err?.message ? (\n        <p className=\" fs-6 p-1 text-danger\" id=\"email-error\">\n          {props.rules && err && props.rules && err?.message}\n        </p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n});\n\nReactColorInput.displayName = \"ReactColorInput\";\nexport default ReactColorInput;\n","import React from \"react\";\n\nconst Sidebar = ({ user, subscription }) => {\n  console.log(\"🚀 ~ Sidebar ~ subscription:\", subscription);\n  return (\n    <div className=\"col-lg-2 col-sm-3 col-4\">\n      <div className=\"nav-profile mt-4\">\n        <div className=\"nav-header\">\n          <span>Account</span>\n        </div>\n        <ul className=\"nav nav-light nav-vertical nav-tabs\">\n          <li className=\"nav-item\">\n            <a\n              data-bs-toggle=\"tab\"\n              href=\"#tab_block_1\"\n              className=\"nav-link active\"\n            >\n              <span className=\"nav-link-text\">Public Profile</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a data-bs-toggle=\"tab\" href=\"#tab_block_2\" className=\"nav-link\">\n              <span className=\"nav-link-text\">Account Settings</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a data-bs-toggle=\"tab\" href=\"#tab_block_4\" className=\"nav-link\">\n              <span className=\"nav-link-text\">Login & Security</span>\n            </a>\n          </li>\n          {user?.parent_id !== null && user?.client_id === null && (\n            <li className=\"nav-item\">\n              <a\n                data-bs-toggle=\"tab\"\n                href=\"#tab_email_config\"\n                className=\"nav-link\"\n              >\n                <span className=\"nav-link-text\">Email Configuration</span>\n              </a>\n            </li>\n          )}\n          {(user?.parent_id !== null || user?.client_id !== null) && (\n            <li className=\"nav-item\">\n              <a\n                data-bs-toggle=\"tab\"\n                href=\"#number_config\"\n                className=\"nav-link\"\n              >\n                <span className=\"nav-link-text\">\n                  Phone Number Configuration\n                </span>\n              </a>\n            </li>\n          )}\n          <li className=\"nav-item\">\n            <a\n              data-bs-toggle=\"tab\"\n              href=\"#tab_voice_settings\"\n              className=\"nav-link\"\n            >\n              <span className=\"nav-link-text\">Voice Settings</span>\n            </a>\n          </li>\n          {user?.parent_id === null && user?.client_id === null && (\n            <li className=\"nav-item\">\n              <a data-bs-toggle=\"tab\" href=\"#tab_cards\" className=\"nav-link\">\n                <span className=\"nav-link-text\">Card Information</span>\n              </a>\n            </li>\n          )}\n          {subscription?.plan?.includes(\"Enterprise\") &&\n            user?.parent_id !== null && (\n              <li className=\"nav-item\">\n                <a data-bs-toggle=\"tab\" href=\"#tab_brand\" className=\"nav-link\">\n                  <span className=\"nav-link-text\">White-Label Dashboard</span>\n                </a>\n              </li>\n            )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport TextAreaField from \"../../../components/FormFields/textAreaField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUserDetails,\n  getUsers,\n  updateUserRec,\n} from \"../../../redux/services/users\";\nimport { setAccount } from \"../../../redux/slices/auth\";\nconst EditAccountSetting = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n  const { users, isLoading, userDetails } = useSelector((state) => state.user);\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    setValue(\"firstname\", user?.name?.split(\" \")[0]);\n    setValue(\"lastname\", user?.name?.split(\" \")[1]);\n    setValue(\"location\", user?.location);\n    setValue(\"bio\", user?.bio);\n    setValue(\"personal_phone\", user?.personal_phone);\n    setAvatar(userDetails?.avatar);\n  }, [user, setValue, users, userDetails]);\n  const handleEditAccount = async (data) => {\n    const formData = new FormData();\n    formData.append(\"name\", data.firstname + \" \" + data.lastname);\n    formData.append(\"avatar\", avatar);\n    formData.append(\"location\", data.location);\n    formData.append(\"bio\", data.bio);\n    formData.append(\"personal_phone\", data.personal_phone);\n    const is_updated = await dispatch(updateUserRec(token, formData, user?.id));\n    if (is_updated === true) {\n      const new_user = await dispatch(getUserDetails(token, user.id));\n      const newUser = {\n        ...user,\n        name: data.firstname + \" \" + data.lastname,\n        email: data.email,\n        location: data.location,\n        bio: data.bio,\n        personal_phone: data.personal_phone,\n        avatar: new_user.avatar,\n      };\n      await dispatch(setAccount(newUser));\n    }\n  };\n  const handleImage = (e) => {\n    let image = e.currentTarget.files[0];\n    setAvatar(image);\n  };\n  return (\n    <div className=\"tab-pane fade show active\" id=\"tab_block_1\">\n      <form onSubmit={handleSubmit(handleEditAccount)}>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <div className=\"media align-items-center\">\n                <div className=\"media-head me-5\">\n                  <div className=\"avatar avatar-rounded avatar-xxl\">\n                    <img\n                      src={\n                        avatar !== null && avatar?.type !== undefined\n                          ? URL.createObjectURL(avatar)\n                          : user?.avatar !== undefined\n                          ? user?.avatar\n                          : \"https://static.vecteezy.com/system/resources/previews/009/292/244/original/default-avatar-icon-of-social-media-user-vector.jpg\"\n                      }\n                      alt=\"user\"\n                      className=\"avatar-img\"\n                    />\n                  </div>\n                </div>\n                <div className=\"media-body\">\n                  <div className=\"btn btn-soft-primary btn-file mb-1\">\n                    Upload Photo\n                    <input\n                      type=\"file\"\n                      className=\"upload\"\n                      onChange={handleImage}\n                    />\n                  </div>\n                  <div className=\"form-text text-muted\">\n                    For better preview recommended size is 450px x 450px. Max\n                    size 5mb.\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Personal Info</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-6\">\n            <InputField\n              name=\"firstname\"\n              placeholder=\"First Name\"\n              label=\"First Name\"\n              control={control}\n              // rules={{\n              //   required: {\n              //     value: true,\n              //     message: \"Field required!\",\n              //   },\n              // }}\n              errors={errors}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <InputField\n              name=\"lastname\"\n              placeholder=\"Last Name\"\n              label=\"Last Name\"\n              control={control}\n              // rules={{\n              //   required: {\n              //     value: true,\n              //     message: \"Field required!\",\n              //   },\n              // }}\n              errors={errors}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <InputField\n              name=\"personal_phone\"\n              placeholder=\"Your Phone Number\"\n              label=\"Phone\"\n              control={control}\n              // rules={{\n              //   required: {\n              //     value: true,\n              //     message: \"Field required!\",\n              //   },\n              // }}\n              errors={errors}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <InputField\n              name=\"location\"\n              placeholder=\"Location\"\n              label=\"Location\"\n              control={control}\n              // rules={{\n              //   required: {\n              //     value: true,\n              //     message: \"Field required!\",\n              //   },\n              // }}\n              errors={errors}\n            />\n          </div>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <TextAreaField\n                name=\"bio\"\n                placeholder=\"Briefly describe yourself...\"\n                label=\"Bio\"\n                rows=\"5\"\n                control={control}\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n                errors={errors}\n              />\n              <small className=\"form-text text-muted\">\n                Brief bio about yourself. This will be displayed on your profile\n                page.\n              </small>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Additional Info</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <InputField\n                name=\"phone\"\n                placeholder=\"Your Phone Number\"\n                label=\"Phone\"\n                control={control}\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n                errors={errors}\n              />\n            </div>\n          </div>\n        </div> */}\n        <button type=\"submit\" className=\"btn btn-primary mt-5\">\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditAccountSetting;\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUserRec, updateUserRec } from \"../../../redux/services/users\";\nimport { logoutUser } from \"../../../redux/services/auth\";\nimport { setAccount } from \"../../../redux/slices/auth\";\n\nconst AccountSetting = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (user) {\n      setValue(\"username\", user?.username);\n      setValue(\"email\", user?.email);\n    }\n  }, [user, setValue]);\n  const handleUpdateSettings = async (data) => {\n    const is_updated = await dispatch(updateUserRec(token, data, user.id));\n    if (is_updated) {\n      const newUser = {\n        ...user,\n        username: data?.username,\n        email: data?.email,\n      };\n      dispatch(setAccount(newUser));\n    }\n  };\n  const handleCloseAccount = () => {\n    dispatch(deleteUserRec(token, user.id));\n    dispatch(logoutUser(token));\n  };\n  return (\n    <div className=\"tab-pane fade\" id=\"tab_block_2\">\n      <div className=\"title-lg fs-4\">\n        <span>Account Settings</span>\n      </div>\n      {/* <p className=\"mb-4\">\n        The Avatar component is used to represent a user, and displays the\n        profile picture, initials or fallback icon.\n      </p> */}\n      <form onSubmit={handleSubmit(handleUpdateSettings)}>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <InputField\n              name=\"username\"\n              placeholder=\"Username\"\n              label=\"Username\"\n              control={control}\n              errors={errors}\n            />\n          </div>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <InputField\n              name=\"email\"\n              placeholder=\"Email Address\"\n              label=\"Email Address\"\n              control={control}\n              type=\"email\"\n              errors={errors}\n            />\n          </div>\n        </div>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Account Changes</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <a href=\"#\" className=\"h5 d-block mb-0\">\n                Delete Account\n              </a>\n              <small className=\"form-text text-muted\">\n                Delete account and all your data\n              </small>\n            </div>\n          </div>\n          <div className=\"col-sm-6 text-end\">\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-danger\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#close_account_confirmation\"\n              >\n                Close Account\n              </button>\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-5\">\n          Save Changes\n        </button>\n      </form>\n      <div\n        id=\"close_account_confirmation\"\n        className=\"modal fade add-new-task\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header bg-primary \">\n              <h5 className=\" modal-title\" style={{ color: \"white\" }}>\n                Confirmation\n              </h5>\n\n              <button\n                type=\"button\"\n                className=\"btn-close btn-light\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Are you sure! you want to delete the account?</p>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                No\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={handleCloseAccount}\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                Yes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountSetting;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUserRec } from \"../../../redux/services/users\";\n\nconst UpdatePassword = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n\n  const handleUpdatePassword = async (data) => {\n    const is_updated = await dispatch(updateUserRec(token, data, user.id));\n  };\n  return (\n    <div className=\"tab-pane fade\" id=\"tab_block_4\">\n      <div className=\"title-lg fs-4\">\n        <span>Login & Security</span>\n      </div>\n      {/* <p className=\"mb-4\">\n        The Avatar component is used to represent a user, and displays the\n        profile picture, initials or fallback icon.\n      </p> */}\n      <form onSubmit={handleSubmit(handleUpdatePassword)}>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Password Settings</span>\n        </div>\n\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <InputField\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"New Password\"\n                label=\"New Password\"\n                control={control}\n                errors={errors}\n              />\n              <button type=\"submit\" className=\"btn btn-primary mt-3\">\n                Update password\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Additional Security</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <label className=\"form-label \">2-Step Verification (2FA)</label>\n              <small className=\"form-text text-muted d-block\">\n                2-step verification drastically reduces the chances of having\n                the personal information in your Google account stolen by\n                someone else. Why? Because hackers would have to not only get\n                your password and your username, they'd have to get a hold of\n                your phone. A{\" \"}\n                <a href=\"#\" className=\"text-primary\">\n                  6-digit\n                </a>{\" \"}\n                code may be sent to a number you’ve previously provided. Codes\n                can be sent in a text message (SMS) or through a voice call,\n                which depends on the setting you chose. To verify it’s you,\n                enter the code on the sign-in screen.\n              </small>\n              <button type=\"button\" className=\"btn btn-primary mt-3\">\n                Add Authentication\n              </button>\n            </div>\n          </div>\n        </div> */}\n      </form>\n    </div>\n  );\n};\n\nexport default UpdatePassword;\n","// authActions.js\nimport axios from \"axios\";\nimport {\n  invalidRequest,\n  cardRequestLoading,\n  cardDetails,\n  addCard,\n  getAllCards,\n  deleteCard,\n  updateCard,\n} from \"../slices/card\";\nimport { toast } from \"react-toastify\";\nconst backendURL = `${process.env.REACT_APP_BACKEND_URL_PRODUCTION}`;\n\nexport const storeCard = (token, data) => async (dispatch) => {\n  try {\n    dispatch(cardRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .post(`${backendURL}/user/cards/post-card`, data, config)\n      .then((response) => {\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(addCard(response.data.message));\n        toast.success(response.data.message);\n        dispatch(getCardList(token));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\nexport const getCardList = (token) => async (dispatch) => {\n  try {\n    dispatch(cardRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .get(`${backendURL}/user/cards/get-cards`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(getAllCards(response.data.data.cardsData));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\nexport const getCardDetails = (token, card_id) => async (dispatch) => {\n  try {\n    dispatch(cardRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .get(`${backendURL}/user/cards/card-details/${card_id}`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(cardDetails(response.data.data.cardData));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\n\nexport const updateCardRec = (token, card_id, data) => async (dispatch) => {\n  try {\n    dispatch(cardRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .put(`${backendURL}/user/cards/card-update/${card_id}`, data, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(updateCard(response.data.message));\n        dispatch(getCardList(token));\n        toast.success(response.data.message);\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\nexport const deleteCardRec = (token, card_id) => async (dispatch) => {\n  try {\n    dispatch(cardRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .delete(`${backendURL}/user/cards/delete-card/${card_id}`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(deleteCard(response.data.message));\n        dispatch(getCardList(token));\n        toast.success(response.data.message);\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport CreditCardInput from \"react-credit-card-input\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCardList, storeCard } from \"../../../redux/services/card\";\nimport {\n  FaCalendar,\n  FaRegCalendar,\n  FaRegCalendarAlt,\n  FaRegCreditCard,\n} from \"react-icons/fa\";\nimport InputField from \"../../../components/FormFields/InputField\";\n\nconst CardInformation = () => {\n  const { token } = useSelector((state) => state.auth);\n  const { cards } = useSelector((state) => state.card);\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm();\n  const [cardData, setCardData] = useState({\n    cardholder_name: \"\",\n    card_number: \"\",\n    cvc: \"\",\n    expiration_date: \"\",\n  });\n  useEffect(() => {\n    dispatch(getCardList(token));\n  }, [token, dispatch]);\n  const handleAddCard = (data) => {\n    console.log(\"🚀 ~ handleAddCard ~ data:\", data);\n    const formData = {\n      ...data,\n      cardholder_name: cardData?.cardholder_name,\n      card_number: cardData?.card_number,\n      cvc: cardData?.cvc,\n      expiration_date: cardData?.expiration_date,\n    };\n    dispatch(storeCard(token, formData));\n  };\n  return (\n    <div>\n      <div className=\"tab-pane fade\" id=\"tab_cards\">\n        <div className=\"title-lg fs-4 mb-4\">\n          <span>Card Information</span>\n        </div>\n        <div className=\"row gap-5\">\n          {cards?.length > 0 &&\n            cards?.map((card, index) => (\n              <div className=\"card rounded shadow-lg col-md-4 col-sm-6 my-5 p-0\">\n                <div className=\"card-header bg-primary \">\n                  <div className=\"card-title\" style={{ color: \"white\" }}>\n                    {card?.cardholder_name}\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  <div\n                    className=\"bg-info py-2 px-3 rounded mb-3\"\n                    style={{ color: \"white\" }}\n                  >\n                    Card Information\n                  </div>\n                  <div className=\"ps-3\">\n                    <p>\n                      <span className=\"pe-1\">\n                        <FaRegCreditCard size={25} />\n                      </span>\n                      <span className=\"fw-bold\"> {card?.card_number}</span>\n                    </p>\n                    <p className=\"my-1\">\n                      <span className=\"pe-1\">\n                        <FaRegCalendarAlt size={25} />\n                      </span>\n                      <span className=\"fw-bold\"> {card?.expiration_date}</span>\n                    </p>\n                  </div>\n                  <div\n                    className=\"bg-info py-2 px-3 rounded mt-3\"\n                    style={{ color: \"white\" }}\n                  >\n                    Billing Information\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"d-flex justify-content-between\">\n                      <div>First Name:</div>\n                      <div>{card?.firstname}</div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>Last Name:</div>\n                      <div>{card?.lastname}</div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>Address:</div>\n                      <div>{card?.address}</div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>City:</div>\n                      <div>{card?.city}</div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>State:</div>\n                      <div>{card?.state}</div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div>Zip/Postal Code:</div>\n                      <div>{card?.zip_code}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n        <form onSubmit={handleSubmit(handleAddCard)}>\n          <div\n            className=\"bg-secondary rounded px-3 py-2 my-3\"\n            style={{ color: \"white\" }}\n          >\n            Your Card Details\n          </div>\n          <div className=\"row\">\n            <div className=\"form-group col-6\">\n              {/* <label className=\"form-label\">Card Holder Name</label> */}\n              <input\n                type=\"text\"\n                name=\"cardholder_name\"\n                placeholder=\"Card Holder Name\"\n                className=\"form-control\"\n                required\n                onChange={(e) =>\n                  setCardData({ ...cardData, cardholder_name: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"col-6\">\n              <CreditCardInput\n                onError={({ inputName, err }) =>\n                  console.log(`credit card input error: ${err}`)\n                }\n                cardCVCInputProps={{\n                  onBlur: (e) => console.log(\"cvc blur\", e),\n                  onChange: (e) =>\n                    setCardData({ ...cardData, cvc: e.target.value }),\n                  onError: (err) => console.log(`cvc error: ${err}`),\n                }}\n                cardExpiryInputProps={{\n                  onBlur: (e) => console.log(\"expiry blur\", e),\n                  onChange: (e) =>\n                    setCardData({\n                      ...cardData,\n                      expiration_date: e.target.value,\n                    }),\n                  onError: (err) => console.log(`expiry error: ${err}`),\n                }}\n                cardNumberInputProps={{\n                  onBlur: (e) => console.log(\"number blur\", e),\n                  onChange: (e) =>\n                    setCardData({ ...cardData, card_number: e.target.value }),\n                  onError: (err) => console.log(`number error: ${err}`),\n                }}\n              />\n            </div>\n          </div>\n          <div\n            className=\"bg-secondary rounded px-3 py-2 my-2\"\n            style={{ color: \"white\" }}\n          >\n            Your Billing Information\n          </div>\n          <div className=\"row mt-3 gx-3\">\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"firstname\"\n                placeholder=\"Your First Name\"\n                // label=\"First Name\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"lastname\"\n                placeholder=\"Last Name\"\n                // label=\"Last Name\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"address\"\n                placeholder=\"Address\"\n                // label=\"Address\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"city\"\n                placeholder=\"City\"\n                // label=\"City\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"state\"\n                placeholder=\"State\"\n                // label=\"State\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"zip_code\"\n                placeholder=\"ZIP/Postal Code\"\n                // label=\"Zip/Postal Code\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"col-md-4 col-sm-6\">\n              <InputField\n                name=\"country\"\n                placeholder=\"Country\"\n                // label=\"Country\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Save Information\n          </button>\n        </form>\n        {/* <form>\n          <div className=\"row gx-3\">\n            <div className=\"col-sm-12\">\n              <div className=\"form-check form-check-lg\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"customChecks1\"\n                />\n                <label className=\"form-check-label mt-0\" for=\"customChecks1\">\n                  let others find me by email address\n                </label>\n                <small className=\"form-text text-muted d-block\">\n                  People who have your email address will be able to connect you\n                  by Jampack\n                </small>\n              </div>\n              <div className=\"separator\"></div>\n              <div className=\"form-check form-check-lg\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"customChecks2\"\n                />\n                <label className=\"form-check-label mt-0\" for=\"customChecks2\">\n                  Keep my phone number private\n                </label>\n                <small className=\"form-text text-muted d-block\">\n                  No one can find you by your phone number. Your phone number\n                  will not be shared with your contact anymore.\n                </small>\n              </div>\n              <div className=\"separator\"></div>\n              <div className=\"form-check form-check-lg\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"customChecks3\"\n                />\n                <label className=\"form-check-label mt-0\" for=\"customChecks3\">\n                  All Keep my location sharing on\n                </label>\n                <small className=\"form-text text-muted d-block\">\n                  Jmapack webapp shares your location wherever you go\n                </small>\n              </div>\n              <div className=\"separator\"></div>\n              <div className=\"form-check form-check-lg\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"customChecks4\"\n                />\n                <label className=\"form-check-label mt-0\" for=\"customChecks4\">\n                  Share data through select partnerships\n                </label>\n                <small className=\"form-text text-muted d-block\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Pellentesque condimentum mauris volutpat enim ornare iaculis.\n                  Curabitur euismod rutrum lorem id lobortis. Cras ut ex dui.\n                  Nulla sed blandit tortor. In quam diam, efficitur sit amet\n                  pulvinar eget, consequat placerat arcu.\n                </small>\n              </div>\n            </div>\n          </div>\n          <button type=\"button\" className=\"btn btn-primary mt-5\">\n            Save Changes\n          </button>\n        </form> */}\n      </div>\n    </div>\n  );\n};\n\nexport default CardInformation;\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUserRec } from \"../../../redux/services/users\";\nimport { setAccount } from \"../../../redux/slices/auth\";\n\nconst UpdatePassword = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n  useEffect(() => {\n    setValue(\"google_app_password\", user?.google_app_password);\n  }, [user, setValue]);\n  const handleUpdate = async (data) => {\n    const updated = await dispatch(updateUserRec(token, data, user.id));\n    if (updated) {\n      const newUser = {\n        ...user,\n        google_app_password: data.google_app_password,\n      };\n      dispatch(setAccount(newUser));\n    }\n  };\n\n  return (\n    <div className=\"tab-pane fade\" id=\"tab_email_config\">\n      <div className=\"title-lg fs-4\">\n        <span>Email Configuration</span>\n      </div>\n      {/* <p className=\"mb-4\">\n        The Avatar component is used to represent a user, and displays the\n        profile picture, initials or fallback icon.\n      </p> */}\n      <form onSubmit={handleSubmit(handleUpdate)}>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Email Configuration</span>\n        </div>\n        <div>\n          <p className=\"text-primary\">Steps for Creating Password</p>\n          <ol className=\"card p-5\">\n            <li>\n              <span className=\"fw-bold\"> Sign in to your Google account:</span>\n              <ul>\n                <li>\n                  Go to{\" \"}\n                  <a\n                    href=\"https://myaccount.google.com\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    myaccount.google.com.\n                  </a>\n                </li>\n                <li>Log in with your Google account credentials.</li>\n              </ul>\n            </li>\n            <li>\n              <span className=\"fw-bold\"> Go to the \"Security\" section:</span>\n              <ul>\n                <li>\n                  Once you are logged in, look for the \"Security\" tab on the\n                  left side of the page and click on it.\n                </li>\n              </ul>\n            </li>\n            <li>\n              <span className=\"fw-bold\">\n                {\" \"}\n                Find the \"Signing in to Google\" section:\n              </span>\n              <ul>\n                <li>\n                  In the \"Security\" section, scroll down until you find \"Signing\n                  in to Google.\"\n                </li>\n              </ul>\n            </li>\n            <li>\n              <span className=\"fw-bold\"> Enable 2-Step Verification:</span>\n              <ul>\n                <li>\n                  If you haven't already set up 2-Step Verification, you must do\n                  so before you can generate an app password.\n                </li>\n                <li>\n                  Follow the prompts to set up 2-Step Verification. You may be\n                  asked to verify your phone number or use the Google\n                  Authenticator app.\n                </li>\n              </ul>\n            </li>\n            <li>\n              <span className=\"fw-bold\"> Generate an app password:</span>\n              <ul>\n                <li>\n                  Once 2-Step Verification is enabled, return to the \"Signing in\n                  to Google\" section and click on \"App passwords.\"\n                </li>\n                <li>You may need to sign in again for security reasons.</li>\n                <li>\n                  On the \"App passwords\" page, click the \"Select app\" dropdown\n                  and choose the app you want to generate a password for (e.g.,\n                  \"Mail,\" \"Calendar,\" etc.).\n                </li>\n                <li>\n                  Then, click the \"Select device\" dropdown and choose the device\n                  you want to generate a password for.\n                </li>\n                <li>Click \"Generate\" to create the app password.</li>\n              </ul>\n            </li>\n            <li>\n              <span className=\"fw-bold\"> Copy the app password:</span>\n              <ul>\n                <li>\n                  Once the password is generated, copy and paste it below input\n                  and save this for email settings.\n                </li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n        <div className=\"row gx-3 mt-5\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <InputField\n                name=\"google_app_password\"\n                type=\"password\"\n                placeholder=\"Your Google App Password\"\n                label=\"App Password\"\n                control={control}\n                errors={errors}\n              />\n              <button type=\"submit\" className=\"btn btn-primary mt-3\">\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Additional Security</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <label className=\"form-label \">2-Step Verification (2FA)</label>\n              <small className=\"form-text text-muted d-block\">\n                2-step verification drastically reduces the chances of having\n                the personal information in your Google account stolen by\n                someone else. Why? Because hackers would have to not only get\n                your password and your username, they'd have to get a hold of\n                your phone. A{\" \"}\n                <a href=\"#\" className=\"text-primary\">\n                  6-digit\n                </a>{\" \"}\n                code may be sent to a number you’ve previously provided. Codes\n                can be sent in a text message (SMS) or through a voice call,\n                which depends on the setting you chose. To verify it’s you,\n                enter the code on the sign-in screen.\n              </small>\n              <button type=\"button\" className=\"btn btn-primary mt-3\">\n                Add Authentication\n              </button>\n            </div>\n          </div>\n        </div> */}\n      </form>\n    </div>\n  );\n};\n\nexport default UpdatePassword;\n","// authActions.js\nimport axios from \"axios\";\nimport {\n  invalidRequest,\n  billingRequestLoading,\n  readBilling,\n  addBilling,\n  updateBilling,\n  deleteBilling,\n  getAllBillings,\n} from \"../slices/billing\";\nimport { toast } from \"react-toastify\";\nconst backendURL = `${process.env.REACT_APP_BACKEND_URL_PRODUCTION}`;\n\nexport const addBillingRec = (token, data) => async (dispatch) => {\n  try {\n    dispatch(billingRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .post(`${backendURL}/user/billing/add-billing`, data, config)\n      .then((response) => {\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(addBilling(response.data.message));\n        toast.success(response.data.message);\n        dispatch(getBillingsList(token));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\nexport const getBillingsList = (token) => async (dispatch) => {\n  try {\n    dispatch(billingRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .get(`${backendURL}/user/billing/get-user-billing`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(getAllBillings(response.data.data.billingsData));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\nexport const readBillingRec = (token, billing_id) => async (dispatch) => {\n  try {\n    dispatch(billingRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .get(`${backendURL}/user/billing/billing-details/${billing_id}`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(readBilling(response.data.data.billingData));\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\n\nexport const updateBillingRec =\n  (token, billing_id, data) => async (dispatch) => {\n    try {\n      dispatch(billingRequestLoading());\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n      };\n      await axios\n        .put(\n          `${backendURL}/user/billing/billing-update/${billing_id}`,\n          data,\n          config\n        )\n        .then((response) => {\n          console.log(\"🚀 ~ .then ~ response:\", response);\n          if (response?.data?.statusCode !== 200) {\n            toast.error(response.data.message);\n            return dispatch(invalidRequest(response.data.message));\n          }\n          dispatch(updateBilling(response.data.message));\n          dispatch(getBillingsList(token));\n          toast.success(response.data.message);\n        });\n    } catch (e) {\n      dispatch(invalidRequest(e.message));\n    }\n  };\nexport const deleteBillingRec = (token, billing_id) => async (dispatch) => {\n  try {\n    dispatch(billingRequestLoading());\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    };\n    await axios\n      .delete(`${backendURL}/user/billing/delete-billing/${billing_id}`, config)\n      .then((response) => {\n        console.log(\"🚀 ~ .then ~ response:\", response);\n        if (response?.data?.statusCode !== 200) {\n          toast.error(response.data.message);\n          return dispatch(invalidRequest(response.data.message));\n        }\n        dispatch(deleteBilling(response.data.message));\n        dispatch(getBillingsList(token));\n        toast.success(response.data.message);\n      });\n  } catch (e) {\n    dispatch(invalidRequest(e.message));\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ReactSelectField from \"../../../components/FormFields/reactSelectField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers, updateUserRec } from \"../../../redux/services/users\";\nimport { setAccount } from \"../../../redux/slices/auth\";\nconst NumberConfig = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n  const { claimedNumbers } = useSelector((state) => state.calling);\n  const { users, isLoading } = useSelector((state) => state.user);\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    dispatch(getUsers(token));\n  }, [dispatch, token, user]);\n  useEffect(() => {\n    if (user) {\n      setValue(\"phone\", {\n        label: user?.phone,\n        value: user?.phone,\n      });\n    }\n  }, [user, setValue]);\n  const handleEditAccount = async (data) => {\n    const formData = new FormData();\n    formData.append(\"phone\", data?.phone?.value);\n    const is_updated = await dispatch(updateUserRec(token, formData, user.id));\n    if (is_updated === true) {\n      const newUser = {\n        ...user,\n        phone: data?.phone?.value,\n      };\n      dispatch(setAccount(newUser));\n    }\n  };\n  return (\n    <div className=\"tab-pane fade show\" id=\"number_config\">\n      <form onSubmit={handleSubmit(handleEditAccount)}>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Set Phone Number Calls and SMS</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-6\">\n            <ReactSelectField\n              name=\"phone\"\n              placeholder=\"Your Phone Number\"\n              label=\"Phone\"\n              control={control}\n              options={\n                claimedNumbers?.length > 0 &&\n                user?.role === \"USER\" &&\n                user.parent_id !== null &&\n                user?.client_id === null\n                  ? claimedNumbers?.map((key, index) => {\n                      return {\n                        label: key?.phoneNumber,\n                        value: key?.phoneNumber,\n                      };\n                    })\n                  : user?.role === \"AGENT\" &&\n                    user?.twilio_numbers?.numbers?.length > 0\n                  ? user?.twilio_numbers?.numbers?.map((key, index) => {\n                      return {\n                        label: key?.phoneNumber,\n                        value: key?.phoneNumber,\n                      };\n                    })\n                  : []\n              }\n              // rules={{\n              //   required: {\n              //     value: true,\n              //     message: \"Field required!\",\n              //   },\n              // }}\n              errors={errors}\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-5\">\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NumberConfig;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUserRec } from \"../../../redux/services/users\";\nimport { setAccount } from \"../../../redux/slices/auth\";\n\nconst VoiceSettings = ({ user }) => {\n  console.log(\"🚀 ~ VoiceSettings ~ user:\", user);\n  const [recording, setRecording] = useState(user.recording);\n  const { token, user_id } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    user_id: user_id,\n    recording: 0,\n  });\n\n  const handleRecordingOnChange = (e) => {\n    setRecording(!recording);\n\n    if (e.target.checked) {\n      setFormData({\n        ...formData,\n        recording: 1,\n      });\n    } else {\n      setFormData({\n        ...formData,\n        recording: 0,\n      });\n    }\n  };\n  const handleSubmitForm = async () => {\n    console.log(formData);\n    const is_updated = await dispatch(updateUserRec(token, formData, user_id));\n    if (is_updated === true) {\n      const newUser = {\n        ...user,\n        recording: recording,\n      };\n      dispatch(setAccount(newUser));\n    }\n  };\n  return (\n    <div className=\"tab-pane fade show\" id=\"tab_voice_settings\">\n      <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n        <span>The Voice Settings</span>\n      </div>\n      <div className=\"d-flex border col-md-4 col-sm-6 justify-content-between px-4 py-2 shadow rounded\">\n        <div>\n          <h6>Auto Call Recording</h6>\n        </div>\n        <div className=\"form-check form-switch\">\n          <input\n            type=\"checkbox\"\n            name=\"recording\"\n            className=\"form-check-input\"\n            id=\"flexSwitchCheckDefault\"\n            checked={recording}\n            onChange={handleRecordingOnChange}\n          />\n        </div>\n      </div>\n      <div className=\" py-4\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={handleSubmitForm}\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceSettings;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport TextAreaField from \"../../../components/FormFields/textAreaField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addUpdateBrandRec,\n  getUserBrandRec,\n} from \"../../../redux/services/brand\";\nimport ReactColorInput from \"../../../components/FormFields/reactColorInput\";\nimport axios from \"axios\";\nimport ReactSelectField from \"../../../components/FormFields/reactSelectField\";\nconst BrandDetails = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n  const { brandDetails } = useSelector((state) => state.brand);\n  const [avatar, setAvatar] = useState(null);\n  const [fonts, setFonts] = useState([]);\n  useEffect(() => {\n    const fetchFonts = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyCwGqg4a2OdpgLlK53S29V51mdnODUhznk`\n        );\n        const fontList = response.data.items.map((font) => ({\n          value: font.family,\n          label: font.family,\n          style: { fontFamily: font.family },\n        }));\n        setFonts(fontList);\n      } catch (error) {\n        console.error(\"Error fetching fonts:\", error);\n      }\n    };\n\n    fetchFonts();\n  }, []);\n\n  useEffect(() => {\n    setValue(\"brand_name\", brandDetails?.brand_name);\n    setValue(\"brand_details\", brandDetails?.brand_details);\n  }, [brandDetails, setValue]);\n  const handleEditAccount = async (data) => {\n    const formData = new FormData();\n    formData.append(\"brand_name\", data.brand_name);\n    formData.append(\"brand_logo\", avatar);\n    formData.append(\"brand_details\", data.brand_details);\n    formData.append(\"user_id\", user.id);\n    formData.append(\"font_family\", data.font_family.value);\n    formData.append(\"text_color\", data.text_color);\n\n    const is_updated = await dispatch(addUpdateBrandRec(token, formData));\n    if (is_updated === true) {\n      await dispatch(getUserBrandRec(token, user.id));\n    }\n  };\n  const handleImage = (e) => {\n    let image = e.currentTarget.files[0];\n    setAvatar(image);\n  };\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      fontFamily: state.data.value,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n      fontFamily: state.data.value,\n    }),\n  };\n  return (\n    <div className=\"tab-pane \" id=\"tab_brand\">\n      <form onSubmit={handleSubmit(handleEditAccount)}>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Brand Logo</span>\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-12\">\n            <div className=\"form-group\">\n              <div className=\"media align-items-center\">\n                <div className=\"media-head me-5\">\n                  <div className=\"avatar avatar-rounded avatar-xxl\">\n                    <img\n                      src={\n                        avatar !== null && avatar?.type !== undefined\n                          ? URL.createObjectURL(avatar)\n                          : brandDetails?.brand_logo !== undefined\n                          ? brandDetails?.brand_logo\n                          : \"https://static.vecteezy.com/system/resources/previews/009/292/244/original/default-avatar-icon-of-social-media-user-vector.jpg\"\n                      }\n                      alt=\"user\"\n                      className=\"avatar-img\"\n                    />\n                  </div>\n                </div>\n                <div className=\"media-body\">\n                  <div className=\"btn btn-soft-primary btn-file mb-1\">\n                    Upload Photo\n                    <input\n                      type=\"file\"\n                      className=\"upload\"\n                      onChange={handleImage}\n                    />\n                  </div>\n                  <div className=\"form-text text-muted\">\n                    For better preview recommended size is 450px x 450px. Max\n                    size 5mb.\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"title title-xs title-wth-divider text-primary text-uppercase my-4\">\n          <span>Personal Info</span>\n        </div>\n        <div className=\"col-sm-6\">\n          <InputField\n            name=\"brand_name\"\n            placeholder=\"Brand Name\"\n            label=\"Brand Name\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: \"Field required!\",\n              },\n            }}\n            errors={errors}\n          />\n        </div>\n        <div className=\"col-sm-6 pt-1\">\n          <ReactColorInput\n            name=\"text_color\"\n            placeholder=\"Text Color\"\n            label=\"Text Color\"\n            mb={true}\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: \"Field required!\",\n              },\n            }}\n            errors={errors}\n          />\n        </div>\n        <div className=\"col-sm-6\">\n          <ReactSelectField\n            name=\"font_family\"\n            placeholder=\"Font Family\"\n            label=\"Font Family\"\n            control={control}\n            options={\n              fonts?.length > 0\n                ? fonts?.map((font) => {\n                    return {\n                      label: font.label,\n                      value: font.value,\n                      style: font.style,\n                    };\n                  })\n                : []\n            }\n            styles={customStyles}\n            rules={{\n              required: {\n                value: true,\n                message: \"Field required!\",\n              },\n            }}\n            errors={errors}\n          />\n        </div>\n        <div className=\"row gx-3\">\n          <div className=\"col-sm-6\">\n            <div className=\"form-group\">\n              <TextAreaField\n                name=\"brand_details\"\n                placeholder=\"Briefly describe your business...\"\n                label=\"Business Details\"\n                rows=\"5\"\n                control={control}\n                rules={{\n                  required: {\n                    value: true,\n                    message: \"Field required!\",\n                  },\n                }}\n                errors={errors}\n              />\n              <small className=\"form-text text-muted\">\n                Brief details about your business.\n              </small>\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-5\">\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default BrandDetails;\n","import React, { useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport EditAccountSetting from \"./components/EditAccountSetting\";\nimport AccountSetting from \"./components/AccountSetting\";\nimport UpdatePassword from \"./components/UpdatePassword\";\nimport CardInformation from \"./components/CardInformation\";\nimport EmailConfig from \"./components/EmailConfig\";\nimport Billing from \"./components/Billing\";\nimport NumberConfig from \"./components/NumberConfig\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport VoiceSettings from \"./components/VoiceSettings\";\nimport {\n  getSubscriptionsList,\n  getUserSubscriptions,\n} from \"../../redux/services/subscription\";\nimport BrandDetails from \"./components/BrandDetails\";\n\nconst ProfileContent = () => {\n  const { user, token } = useSelector((state) => state.auth);\n  const { subscription } = useSelector((state) => state.subscription);\n  return (\n    <div>\n      <div\n        className=\"hk-pg-wrapper\"\n        style={{ height: \"100vh\", overflow: \"scroll\" }}\n      >\n        <div className=\"container-xxl\">\n          {/* <!-- Page Header --> */}\n          <div className=\"hk-pg-header pt-7 pb-4\">\n            <h1 className=\"pg-title\">Account Settings</h1>\n          </div>\n          {/* <!-- /Page Header --> */}\n\n          {/* <!-- Page Body --> */}\n          <div className=\"hk-pg-body\">\n            <div className=\"row edit-profile-wrap\">\n              <Sidebar user={user} subscription={subscription} />\n              <div className=\"col-lg-10 col-sm-9 col-8\">\n                <div className=\"tab-content\">\n                  <EditAccountSetting />\n                  <AccountSetting />\n                  <UpdatePassword />\n                  <EmailConfig />\n                  <NumberConfig />\n                  <VoiceSettings user={user} />\n                  {/* <Billing /> */}\n                  <BrandDetails />\n                  <CardInformation />\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <!-- /Page Body -->\t\t */}\n        </div>\n\n        {/* <!-- Page Footer --> */}\n        {/* <div className=\"hk-footer\">\n          <footer className=\"container-xxl footer\">\n            <div className=\"row\">\n              <div className=\"col-xl-8\">\n                <p className=\"footer-text\">\n                  <span className=\"copy-text\">\n                    Jampack © 2023 All rights reserved.\n                  </span>{\" \"}\n                  <a href=\"#\" className=\"\" target=\"_blank\">\n                    Privacy Policy\n                  </a>\n                  <span className=\"footer-link-sep\">|</span>\n                  <a href=\"#\" className=\"\" target=\"_blank\">\n                    T&C\n                  </a>\n                  <span className=\"footer-link-sep\">|</span>\n                  <a href=\"#\" className=\"\" target=\"_blank\">\n                    System Status\n                  </a>\n                </p>\n              </div>\n              <div className=\"col-xl-4\">\n                <a href=\"#\" className=\"footer-extr-link link-default\">\n                  <span className=\"feather-icon\">\n                    <i data-feather=\"external-link\"></i>\n                  </span>\n                  <u>Send feedback to our help forum</u>\n                </a>\n              </div>\n            </div>\n          </footer>\n        </div> */}\n        {/* <!-- / Page Footer --> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileContent;\n","import React from \"react\";\nimport Layout from \"../layout/Layout\";\nimport ProfileContent from \"./ProfileContent\";\n\nconst Profile = () => {\n  return <Layout component={<ProfileContent />} />;\n};\n\nexport default Profile;\n"],"names":["ReactColorInput","React","props","ref","title","style","label","type","errors","defaultValue","onChange","onFocus","onBlur","menuPlacement","ellipses","value","others","field","fieldState","formState","useController","color","setColor","useState","err","_","name","handleOnChange","hex","_jsxs","className","children","_jsx","Controller","rules","control","render","_ref","_Fragment","for","class","InputColor","initialValue","placement","height","paddingLeft","placeholder","message","id","displayName","_subscription$plan","user","subscription","console","log","href","parent_id","client_id","plan","includes","EditAccountSetting","handleSubmit","watch","setValue","useForm","dispatch","useDispatch","token","useSelector","state","auth","users","isLoading","userDetails","avatar","setAvatar","useEffect","_user$name","_user$name2","split","location","bio","personal_phone","onSubmit","async","formData","FormData","append","data","firstname","lastname","updateUserRec","new_user","getUserDetails","newUser","email","setAccount","src","undefined","URL","createObjectURL","alt","e","image","currentTarget","files","InputField","TextAreaField","rows","required","AccountSetting","username","tabindex","role","onClick","handleCloseAccount","deleteUserRec","logoutUser","UpdatePassword","backendURL","concat","process","getCardList","cardRequestLoading","config","headers","axios","get","then","response","_response$data2","statusCode","toast","error","invalidRequest","getAllCards","cardsData","CardInformation","cards","card","cardData","setCardData","cardholder_name","card_number","cvc","expiration_date","length","map","index","FaRegCreditCard","size","FaRegCalendarAlt","address","city","zip_code","storeCard","post","_response$data","addCard","success","target","CreditCardInput","onError","inputName","cardCVCInputProps","cardExpiryInputProps","cardNumberInputProps","google_app_password","rel","NumberConfig","_user$twilio_numbers","_user$twilio_numbers$","_user$twilio_numbers2","_user$twilio_numbers3","claimedNumbers","calling","getUsers","phone","_data$phone","_data$phone2","ReactSelectField","options","key","phoneNumber","twilio_numbers","numbers","recording","setRecording","user_id","setFormData","checked","BrandDetails","brandDetails","brand","fonts","setFonts","fontList","items","font","family","fontFamily","fetchFonts","brand_name","brand_details","font_family","text_color","addUpdateBrandRec","getUserBrandRec","brand_logo","mb","styles","option","provided","singleValue","ProfileContent","overflow","Sidebar","EmailConfig","VoiceSettings","Profile","Layout","component"],"sourceRoot":""}