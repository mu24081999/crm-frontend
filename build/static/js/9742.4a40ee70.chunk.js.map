{"version":3,"file":"static/js/9742.4a40ee70.chunk.js","mappings":"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","sources":["views/Admin/Balance/BalanceContent.js","views/Admin/Balance/Balance.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Payment from \"../../../components/PaymentCard/Payment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUserAllPayments,\n  paymentIntent,\n} from \"../../../redux/services/payment\";\nimport { toast } from \"react-toastify\";\nimport { FiDollarSign } from \"react-icons/fi\";\nimport {\n  addBalanceRec,\n  asignBalanceToUser,\n  getBalance,\n} from \"../../../redux/services/balance\";\nimport moment from \"moment/moment\";\nimport { SocketContext } from \"../../../Context\";\nimport ReactSelectField from \"../../../components/FormFields/reactSelectField\";\nimport InputField from \"../../../components/FormFields/InputField\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash\";\nimport Loader from \"../../../components/Loader/Loader\";\nconst BalanceContent = () => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm({});\n  const { pushNotification } = useContext(SocketContext);\n  const { user, token } = useSelector((state) => state.auth);\n  const { users } = useSelector((state) => state.user);\n  const { balanceDetails, isLoading } = useSelector((state) => state.balance);\n  const { payments } = useSelector((state) => state.payment);\n  const [amount, setAmount] = useState(null);\n  const [usersData, setUsersData] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBalance(token));\n    dispatch(getUserAllPayments(token));\n  }, [token, dispatch]);\n  useEffect(() => {\n    const filteredData = users?.filter(\n      (usr) => _.toInteger(usr.parent_id) === user.id\n    );\n    setUsersData(filteredData);\n  }, [users, user]);\n  const afterPayment = async () => {\n    const formData = {\n      user_id: user.id,\n      credit: amount * 100,\n    };\n    const is_added = await dispatch(addBalanceRec(token, formData));\n    if (is_added === true) {\n      const data = {\n        user_id: user.id,\n        notification: `Your account balance has been credited with amount $${amount}`,\n        type: \"balance_credit\",\n      };\n      pushNotification(data);\n    }\n  };\n  const onAddClick = () => {\n    dispatch(\n      paymentIntent(token, {\n        currency: \"usd\",\n        amount: amount * 100,\n        // amount: amount_value ? amount_value.getAttribute(\"data-amount\") : \"\",\n      })\n    );\n  };\n  const handleAsignBalance = async (data) => {\n    const formData = {\n      user_id: user.id,\n      to_user: data.to_user.value,\n      credit: data.credit * 100,\n    };\n    const is_added = await dispatch(asignBalanceToUser(token, formData));\n    if (is_added === true) {\n      const notificationParam = {\n        user_id: user.id,\n        notification: `Your have successfully transfer amount to your subaccount ${data?.to_user?.label} of amount $${data.credit}`,\n        type: \"balance_credit\",\n      };\n      pushNotification(notificationParam);\n      const notificationParam2 = {\n        user_id: data.to_user.value,\n        notification: `Your account balance has been credited with amount ${data.credit} from account ${user.name}`,\n        type: \"balance_credit\",\n      };\n      pushNotification(notificationParam2);\n    }\n  };\n  const max_amount = balanceDetails?.credit / 100;\n  return (\n    <>\n      <div className=\"hk-pg-wrapper pb-0\">\n        {/* <!-- Page Body --> */}\n        <div className=\"hk-pg-body py-0\">\n          <div className=\"contactapp-wrap\">\n            <div className=\"contactapp-content\">\n              <div className=\"d-flex border w-100 justify-content-center\">\n                <div className=\"w-50 m-5\">\n                  <div\n                    className=\"card shadow-lg border-primary\"\n                    style={{ height: \"max-content\" }}\n                  >\n                    <div\n                      className=\"m-5\"\n                      style={{\n                        // fontFamily: \"monospace\",\n                        fontSize: \"25px\",\n                        // color: \"white\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      <div className=\"\">\n                        <div className=\"float-start mt-2 me-5\">\n                          <div class=\"lh-1 text-white bg-primary rounded-circle p-3 d-flex align-items-center justify-content-center\">\n                            <FiDollarSign size={25} />\n                          </div>{\" \"}\n                        </div>\n                        <p className=\"fw-bolder\">Available Credit </p>\n                        <span>\n                          $\n                          {balanceDetails?.credit > 0\n                            ? balanceDetails?.credit / 100\n                            : 0}\n                        </span>\n                      </div>\n                      <div className=\" d-flex gap-1 justify-content-end\">\n                        <div className=\"form-group col-2 pt-1 d-flex\">\n                          <span>$</span>\n                          <input\n                            type=\"number\"\n                            className=\"form-control p-1 px-2 \"\n                            placeholder=\"Amount\"\n                            required={true}\n                            min={10}\n                            onChange={(e) => setAmount(e.target.value)}\n                          />\n                        </div>\n                        {amount < 10 ? (\n                          <div>\n                            <button\n                              className=\"btn btn-primary btn-sm \"\n                              style={{ paddingInline: \"10px\" }}\n                              onClick={() =>\n                                toast.error(\n                                  \"Please enter credit greater than 10.\"\n                                )\n                              }\n                            >\n                              Add Credit\n                            </button>\n                          </div>\n                        ) : (\n                          <div>\n                            <button\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#add_payment_form\"\n                              className=\"btn btn-primary btn-sm \"\n                              style={{ paddingInline: \"10px\" }}\n                              onClick={onAddClick}\n                            >\n                              Add Credit\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                      <form\n                        onSubmit={handleSubmit(handleAsignBalance)}\n                        className=\"border border-primary rounded card-body\"\n                      >\n                        <div className=\"d-flex gap-3\">\n                          <div className=\"col-md-6 col-sm-6\">\n                            <ReactSelectField\n                              name=\"to_user\"\n                              placeholder=\"Asign To\"\n                              mb={true}\n                              control={control}\n                              rules={{\n                                required: {\n                                  value: true,\n                                  message: \"Field required!\",\n                                },\n                              }}\n                              options={\n                                usersData?.length > 0\n                                  ? usersData?.map((usr) => {\n                                      return {\n                                        label: usr.name,\n                                        value: usr.id,\n                                      };\n                                    })\n                                  : []\n                              }\n                              errors={errors}\n                            />\n                          </div>\n                          <div className=\"col-md-5 col-sm-6 pt-1\">\n                            <InputField\n                              name=\"credit\"\n                              type=\"number\"\n                              placeholder=\"Credit Amount\"\n                              mb={true}\n                              max={max_amount}\n                              control={control}\n                              rules={{\n                                required: {\n                                  value: true,\n                                  message: \"Field required!\",\n                                },\n                              }}\n                              errors={errors}\n                            />\n                          </div>\n                        </div>\n                        <div>\n                          {isLoading ? (\n                            <Loader />\n                          ) : (\n                            <button className=\"btn btn-primary mt-3\">\n                              Submit\n                            </button>\n                          )}\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                  <div className=\" p-0\" style={{ height: \"100%\" }}>\n                    <div className=\"card\" style={{ height: \"55%\" }}>\n                      <div className=\"card-header bg-primary\">\n                        <div className=\"card-title text-white fw-bolder\">\n                          Balance Logs\n                        </div>\n                      </div>\n                      <div\n                        className=\"card-body\"\n                        style={{\n                          height: \"480px\",\n                          overflow: \"scroll\",\n                          scrollBehavior: \"smooth\",\n                        }}\n                      >\n                        <table class=\"table table-hover\">\n                          <thead>\n                            <tr className=\"sticky-top rounded\">\n                              <th scope=\"col\">#</th>\n                              <th scope=\"col\">Description</th>\n                              <th scope=\"col\">Amount Paid</th>\n                              <th scope=\"col\">Date</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {payments?.length > 0 ? (\n                              payments?.map((payment, index) => (\n                                <tr key={index}>\n                                  <th scope=\"row\">{index}</th>\n                                  <td>{payment?.description}</td>\n                                  <td>{payment?.amount / 100}</td>\n                                  <td>\n                                    {moment(payment?.created_at).format(\n                                      \"DD MMM,YYYY\"\n                                    )}\n                                  </td>\n                                </tr>\n                              ))\n                            ) : (\n                              <p>No Record</p>\n                            )}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Payment\n            // route=\"/kyc-form\"\n            afterPayment={afterPayment}\n            description=\"Credit added\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BalanceContent;\n","import React from \"react\";\nimport Layout from \"../../layout/Layout\";\nimport BalanceContent from \"./BalanceContent\";\n\nconst Balance = () => {\n  return <Layout component={<BalanceContent />} />;\n};\n\nexport default Balance;\n"],"names":["BalanceContent","handleSubmit","watch","control","setValue","formState","errors","useForm","pushNotification","useContext","SocketContext","user","token","useSelector","state","auth","users","balanceDetails","isLoading","balance","payments","payment","amount","setAmount","useState","usersData","setUsersData","dispatch","useDispatch","useEffect","getBalance","getUserAllPayments","filteredData","filter","usr","_","parent_id","id","max_amount","credit","_jsx","_Fragment","children","className","_jsxs","style","height","fontSize","fontWeight","class","FiDollarSign","size","type","placeholder","required","min","onChange","e","target","value","paddingInline","onClick","toast","error","onAddClick","paymentIntent","currency","onSubmit","async","formData","user_id","to_user","data","asignBalanceToUser","_data$to_user","notificationParam","notification","concat","label","notificationParam2","name","ReactSelectField","mb","rules","message","options","length","map","InputField","max","Loader","overflow","scrollBehavior","scope","index","description","moment","created_at","format","Payment","afterPayment","addBalanceRec","Balance","Layout","component"],"sourceRoot":""}