{"version":3,"file":"static/js/5910.5b5ef1b4.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.js","views/Admin/A2PRegistrationRequest/components/Sidebar.js","views/Admin/A2PRegistrationRequest/components/Header.js","views/Admin/A2PRegistrationRequest/components/SubscriptionList.js","views/Admin/A2PRegistrationRequest/A2PRegistrationRequestsContent.js","views/Admin/A2PRegistrationRequest/A2PRegistrationRequests.js"],"sourcesContent":["// export default Pagination;\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./paginate.css\";\nimport { FaGreaterThan, FaLessThan } from \"react-icons/fa\";\n\n// function Items({ currentItems }) {\n//   return (\n//     <>\n//       {currentItems &&\n//         currentItems.map((item, index) => (\n//           <div key={index}>\n//             <h3>Item #{item.id}</h3>\n//           </div>\n//         ))}\n//     </>\n//   );\n// }\n// Function to deep compare two arrays\nconst arraysEqual = (arr1, arr2) => {\n  if (arr1?.length !== arr2?.length) return false;\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n};\n\nfunction Pagination({ itemsPerPage, items, dataFromChild }) {\n  const prevItems = useRef();\n\n  const [itemOffset, setItemOffset] = useState(0);\n  const endOffset = itemOffset + itemsPerPage;\n  const currentItems = items?.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n  console.log(\n    prevItems.current,\n    currentItems,\n    currentItems !== prevItems.current\n  );\n  // Invoke when user clicks to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage;\n    console.log(\n      `User requested page number ${\n        event.selected + 1\n      }, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n    dataFromChild(currentItems);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      // Simulate an API call delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      if (!arraysEqual(currentItems, prevItems.current)) {\n        dataFromChild(currentItems);\n        // Update the previous items reference\n        prevItems.current = currentItems;\n      }\n    };\n    fetchData();\n  }, [currentItems, prevItems, dataFromChild]);\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          boxSizing: \"border-box\",\n          // width: \"max-content\",\n          width: \"100%\",\n          height: \"100px\",\n          // border: \"1px solid teal\",\n        }}\n      >\n        {/* <Items currentItems={currentItems} /> */}\n\n        <ReactPaginate\n          breakClassName={\"item break-me \"}\n          containerClassName={\"d-flex justify-content-center\"}\n          disabledClassName={\"disabled-page\"}\n          marginPagesDisplayed={2}\n          nextClassName={\"arrows btn btn-light \"}\n          pageClassName={\"item pagination-page \"}\n          previousClassName={\"arrows btn btn-light\"}\n          nextLabel={<FaGreaterThan />}\n          previousLabel={<FaLessThan />}\n          breakLabel=\"...\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          //   previousLabel={\n          //     <img src={backImg} style={{ fontSize: 18, width: 50 }} />\n          //   }\n          renderOnZeroPageCount={null}\n          activeClassName=\"pagination_active\"\n        />\n        {/* <p style={{ textAlign: \"center\", width: \"100%\", fontSize: \"18px\" }}>\n          Loading items from {itemOffset + 1} to {endOffset} out of{\" \"}\n          {items.length}\n        </p> */}\n      </div>\n    </>\n  );\n}\n\nexport default Pagination;\n","import React, { useContext, useState } from \"react\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { SocketContext } from \"../../../../Context\";\nimport { MdOutlineSubscriptions, MdSubscriptions } from \"react-icons/md\";\nimport { PiHourglassLowFill } from \"react-icons/pi\";\n\nconst Sidebar = ({ onSendData, contactsData, onToggleEdit, subscriptions }) => {\n  const [activeBar, setActiveBar] = useState(\"all\");\n  const { handleToggleShowLeadDetail } = useContext(SocketContext);\n\n  const handleActiveClick = () => {\n    const data = subscriptions.filter((sub) => sub.active === 1);\n    setActiveBar(\"active\");\n    onSendData(data);\n    handleToggleShowLeadDetail(false);\n\n    onToggleEdit(false);\n  };\n  const handleAllClick = () => {\n    const filterData = subscriptions;\n    setActiveBar(\"all\");\n    // onToggleEdit(false);\n    handleToggleShowLeadDetail(false);\n\n    onSendData(filterData);\n  };\n  const onDelayedClick = () => {\n    const filterData = subscriptions?.filter(\n      (subscription) => subscription.status === \"delayed\"\n    );\n    setActiveBar(\"delayed\");\n    // onToggleEdit(false);\n    handleToggleShowLeadDetail(false);\n\n    onSendData(filterData);\n  };\n  const onRequiredClick = () => {\n    const filterData = subscriptions?.filter(\n      (subscription) => subscription.status === \"subscription-required\"\n    );\n    setActiveBar(\"subscription-required\");\n    // onToggleEdit(false);\n    handleToggleShowLeadDetail(false);\n\n    onSendData(filterData);\n  };\n  return (\n    <nav className=\"contactapp-sidebar\">\n      <div data-simplebar className=\"nicescroll-bar\">\n        <div className=\"menu-content-wrap\">\n          <div className=\"menu-group p-1\">\n            <ul className=\"nav nav-light navbar-nav flex-column\">\n              <li\n                id=\"all_contacts\"\n                className={`nav-item ${activeBar === \"all\" ? \"active\" : \"\"}`}\n              >\n                <button onClick={handleAllClick} className=\"nav-link btn-block\">\n                  <span className=\"nav-icon-wrap\">\n                    <span className=\"feather-icon\">\n                      {/* <i data-feather=\"inbox\"></i> */}\n                      <MdOutlineSubscriptions />\n                    </span>\n                  </span>\n                  <span className=\"nav-link-text\">All Subscriptions</span>\n                </button>\n              </li>\n              <li\n                className={`nav-item ${\n                  activeBar === \"delayed\" ? \"active\" : \"\"\n                }`}\n              >\n                <button className=\"nav-link btn-block\" onClick={onDelayedClick}>\n                  <span className=\"nav-icon-wrap\">\n                    <span className=\"feather-icon\">\n                      {/* <i data-feather=\"star\"></i> */}\n                      <PiHourglassLowFill />\n                    </span>\n                  </span>\n                  <span className=\"nav-link-text\">Delayed</span>\n                </button>\n              </li>\n              <li\n                className={`nav-item ${\n                  activeBar === \"subscription-required\" ? \"active\" : \"\"\n                }`}\n              >\n                <button\n                  className=\"nav-link btn-block\"\n                  onClick={onRequiredClick}\n                >\n                  <span className=\"nav-icon-wrap\">\n                    <span className=\"feather-icon\">\n                      {/* <i data-feather=\"archive\"></i> */}\n                      <MdSubscriptions />\n                    </span>\n                  </span>\n                  <span className=\"nav-link-text\">Subscription Required</span>\n                </button>\n              </li>\n\n              <li\n                className={`nav-item ${activeBar === \"active\" ? \"active\" : \"\"}`}\n              >\n                <button\n                  id=\"deleted_contacts\"\n                  onClick={handleActiveClick}\n                  className=\"nav-link btn-block\"\n                >\n                  <span className=\"nav-icon-wrap\">\n                    <span className=\"feather-icon\">\n                      {/* <i data-feather=\"trash-2\"></i> */}\n                      <FaCheck />\n                    </span>\n                  </span>\n                  <span className=\"nav-link-text\">Active</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {/* <!--Sidebar Fixnav--> */}\n      <div className=\"contactapp-fixednav\">\n        <div className=\"hk-toolbar\"></div>\n      </div>\n      {/* <!--/ Sidebar Fixnav--> */}\n    </nav>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from \"react\";\nimport { CiMenuKebab } from \"react-icons/ci\";\nimport {\n  FaChevronDown,\n  FaChevronUp,\n  FaList,\n  FaRecycle,\n  FaRegIdCard,\n} from \"react-icons/fa\";\n\nconst Header = ({ onDataFromChild, activeBar }) => {\n  return (\n    <header className=\"contact-header border px-2 pt-4 pb-3\">\n      <div className=\"d-flex align-items-center\">\n        <span className=\"fs-5 fw-bold\">A2P Registration Requests</span>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../../../components/Loader/Loader\";\nimport moment from \"moment\";\nimport ReactSelectField from \"../../../../components/FormFields/reactSelectField\";\nimport { useForm } from \"react-hook-form\";\nimport { updateVerificationRec } from \"../../../../redux/services/verification\";\nimport _ from \"lodash\";\n\nconst SubscriptionList = ({\n  subscriptionsArray,\n  onToggleEdit,\n  isEdit,\n  users,\n}) => {\n  const {\n    handleSubmit,\n    watch,\n    control,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({});\n  const dispatch = useDispatch();\n  const { token } = useSelector((state) => state.auth);\n  const { isLoading } = useSelector((state) => state.verification);\n  const handleOnChangeStatus = (e, id) => {\n    console.log(\"🚀 ~ e:\", e);\n    const params = {\n      status: e.value,\n    };\n    dispatch(updateVerificationRec(token, id, params));\n  };\n  return (\n    <div>\n      {!isEdit && (\n        <>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <div className=\"table-responsive\" style={{ overFlowX: \"auto\" }}>\n                <table className=\"table mb-5\">\n                  <thead>\n                    <tr>\n                      <th>Client</th>\n                      <th>Legal Business Name</th>\n                      <th>Business Type</th>\n                      <th>Business Registration ID Type</th>\n                      <th>Business Registration Number</th>\n                      <th>Business Industry</th>\n                      <th>Website</th>\n                      <th>Rigion</th>\n                      <th>Street</th>\n                      <th>City</th>\n                      <th>Postal Code</th>\n                      <th>Country</th>\n                      <th>Phone Number</th>\n                      <th>Brand Type</th>\n                      <th>Status</th>\n                      <th>Amount Paid</th>\n                      <th>Payment Status</th>\n                      <th> Created</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {subscriptionsArray?.length > 0 &&\n                      subscriptionsArray?.map((detail) => (\n                        <tr>\n                          <td>\n                            <p>\n                              {\" \"}\n                              {\n                                users?.filter(\n                                  (usr) => usr.id === detail?.user_id\n                                )[0]?.name\n                              }\n                            </p>\n                            <p\n                              className=\"border-top border-primary\"\n                              style={{ width: \"max-content\" }}\n                            >\n                              {\" \"}\n                              {\n                                users?.filter(\n                                  (usr) => usr.id === detail?.user_id\n                                )[0]?.email\n                              }\n                            </p>\n                          </td>\n                          <td className=\"\">\n                            <span style={{ fontSize: \"14px\" }}>\n                              {detail?.legal_business_name}\n                            </span>\n                          </td>\n                          <td>{detail?.business_type}</td>\n                          <td>{detail?.business_registration_id_type}</td>\n                          <td>{detail?.business_reg_no}</td>\n                          <td>{detail?.business_industry}</td>\n                          <td>{detail?.website_url}</td>\n                          <td>{detail?.rigion}</td>\n                          <td>{detail?.street}</td>\n                          <td>{detail?.city}</td>\n                          <td>{detail?.postal_code}</td>\n                          <td>{detail?.country}</td>\n                          <td>{detail?.phone_number}</td>\n                          <td>{detail?.brand_type}</td>\n\n                          <td>\n                            <div style={{ width: \"200px\", marginTop: \"20px\" }}>\n                              <ReactSelectField\n                                name=\"status\"\n                                md={true}\n                                // label=\"Visibility\"\n                                onChange={(e) =>\n                                  handleOnChangeStatus(e, detail?.id)\n                                }\n                                defaultValue={{\n                                  label: _.capitalize(detail?.status),\n                                  value: detail.status,\n                                }}\n                                control={control}\n                                options={[\n                                  {\n                                    label: \"Pending\",\n                                    value: \"pending\",\n                                  },\n                                  {\n                                    label: \"Verified\",\n                                    value: \"verified\",\n                                  },\n                                  {\n                                    label: \"Rejected\",\n                                    value: \"rejected\",\n                                  },\n                                ]}\n                                rules={{\n                                  required: {\n                                    value: true,\n                                    message: \"Field required!\",\n                                  },\n                                }}\n                                errors={errors}\n                              />\n                            </div>\n                          </td>\n                          <td>{detail?.amount_paid}</td>\n                          <td>{detail?.payment_status}</td>\n                          <td>\n                            {\" \"}\n                            {moment(detail?.start_date).format(\"DD MMM, YYYY\")}\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SubscriptionList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Header from \"./components/Header\";\nimport SubscriptionList from \"./components/SubscriptionList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SocketContext } from \"../../../Context\";\nimport { getSubscriptionsList } from \"../../../redux/services/subscription\";\nimport { getUsers } from \"../../../redux/services/users\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport { getVerificationsList } from \"../../../redux/services/verification\";\nimport { useForm } from \"react-hook-form\";\nconst A2PRegistrationRequestsContent = () => {\n  const {\n    handleSubmit,\n    // watch,\n    control,\n    // setValue,\n    formState: { errors },\n  } = useForm({});\n  const { showLeadDetails } = useContext(SocketContext);\n  const dispatch = useDispatch();\n  const { token, user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  const [data_, setData_] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [view, setView] = useState(\"list\");\n  const { subscriptions } = useSelector((state) => state.subscription);\n  const { verifications } = useSelector((state) => state.verification);\n  const { users } = useSelector((state) => state.user);\n  useEffect(() => {\n    if (verifications?.length > 0) {\n      const filterData = [];\n      verifications?.map((ver) => {\n        const user = users?.filter((user) => user.id === ver?.user_id)[0];\n        const data = {\n          ...ver,\n          customer_details: user,\n        };\n        return filterData?.push(data);\n      });\n      setData(verifications);\n      setData_(verifications);\n    }\n  }, [verifications, users]);\n  useEffect(() => {\n    dispatch(getUsers(token));\n    dispatch(getVerificationsList(token));\n  }, [token, dispatch]);\n  const handleReceiveData = (receivedData) => {\n    setData(receivedData);\n  };\n  const handleToggleEdit = (value) => {\n    // setIsEdit(value);\n  };\n  const handleViewDataFromHeader = (value) => {\n    setView(value);\n  };\n\n  const handleDataFromPagination = (newData) => {\n    setData(newData);\n  };\n\n  return (\n    <div className=\"hk-pg-wrapper pb-0\">\n      {/* <!-- Page Body --> */}\n      <div className=\"hk-pg-body py-0\">\n        <div\n          // className=\"contactapp-wrap\"\n          style={{ width: \"100%\", overflow: \"scroll\" }}\n        >\n          <div className=\"contactapp-content\">\n            {/* <Sidebar\n              onSendData={handleReceiveData}\n              onToggleEdit={handleToggleEdit}\n              subscriptions={data_}\n            /> */}\n\n            {!showLeadDetails && (\n              <div className=\"contactapp-detail-wrap\">\n                <Header\n                  onDataFromChild={handleViewDataFromHeader}\n                  activeBar={view}\n                />\n                <div className=\"\">\n                  <div>\n                    <SubscriptionList\n                      subscriptionsArray={data}\n                      users={users}\n                      onToggleEdit={handleToggleEdit}\n                      isEdit={isEdit}\n                    />\n                    <div>\n                      <Pagination\n                        itemsPerPage={20}\n                        dataFromChild={handleDataFromPagination}\n                        items={data_}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* <!-- /Page Body --> */}\n    </div>\n  );\n};\n\nexport default A2PRegistrationRequestsContent;\n","import React from \"react\";\nimport Layout from \"../../layout/Layout\";\nimport A2PRegistrationRequestsContent from \"./A2PRegistrationRequestsContent\";\n\nconst A2PRegistrationRequests = () => {\n  return <Layout component={<A2PRegistrationRequestsContent />} />;\n};\n\nexport default A2PRegistrationRequests;\n"],"names":["_ref","itemsPerPage","items","dataFromChild","prevItems","useRef","itemOffset","setItemOffset","useState","endOffset","currentItems","slice","pageCount","Math","ceil","length","console","log","current","useEffect","async","Promise","resolve","setTimeout","arraysEqual","arr1","arr2","i","fetchData","_jsx","_Fragment","children","style","display","flexDirection","justifyContent","boxSizing","width","height","ReactPaginate","breakClassName","containerClassName","disabledClassName","marginPagesDisplayed","nextClassName","pageClassName","previousClassName","nextLabel","FaGreaterThan","previousLabel","FaLessThan","breakLabel","onPageChange","event","newOffset","selected","concat","pageRangeDisplayed","renderOnZeroPageCount","activeClassName","onDataFromChild","activeBar","className","subscriptionsArray","onToggleEdit","isEdit","users","handleSubmit","watch","control","setValue","reset","formState","errors","useForm","dispatch","useDispatch","token","useSelector","state","auth","isLoading","verification","Loader","overFlowX","_jsxs","map","detail","_users$filter$","_users$filter$2","filter","usr","id","user_id","name","email","fontSize","legal_business_name","business_type","business_registration_id_type","business_reg_no","business_industry","website_url","rigion","street","city","postal_code","country","phone_number","brand_type","marginTop","ReactSelectField","md","onChange","e","handleOnChangeStatus","params","status","value","updateVerificationRec","defaultValue","label","_","options","rules","required","message","amount_paid","payment_status","moment","start_date","format","A2PRegistrationRequestsContent","showLeadDetails","useContext","SocketContext","user","data","setData","data_","setData_","setIsEdit","view","setView","subscriptions","subscription","verifications","filterData","ver","customer_details","push","getUsers","getVerificationsList","overflow","Header","SubscriptionList","Pagination","newData","A2PRegistrationRequests","Layout","component"],"sourceRoot":""}